import type { ArtifactManager, BuildInfo } from "hardhat/types/artifacts";
import type { CompilerInput, SolidityBuildInfoOutput, SolidityBuildSystem } from "hardhat/types/solidity";
export interface BuildInfoAndOutput {
    buildInfo: BuildInfo;
    buildInfoOutput: SolidityBuildInfoOutput;
}
/**
 * Retrieves the saved build information and output for a given contract.
 *
 * @param artifacts The artifact manager instance to use for retrieving build info.
 * @param contract The fully qualified contract name (e.g., "contracts/Token.sol:Token").
 * @returns The `BuildInfo` object if it exists on disk, or `undefined` if no
 * build info is found.
 */
export declare function getBuildInfoAndOutput(artifacts: ArtifactManager, contract: string): Promise<BuildInfoAndOutput | undefined>;
export declare function getCompilerInput(solidity: SolidityBuildSystem, root: string, sourceName: string, isNpmModule: boolean, buildProfileName: string): Promise<CompilerInput>;
//# sourceMappingURL=artifacts.d.ts.map