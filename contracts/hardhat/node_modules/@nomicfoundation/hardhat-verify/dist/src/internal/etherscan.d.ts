import type { VerificationProvider } from "./types.js";
import type { Dispatcher, DispatcherOptions } from "@nomicfoundation/hardhat-utils/request";
import type { VerificationProvidersConfig } from "hardhat/types/config";
export declare const ETHERSCAN_PROVIDER_NAME: keyof VerificationProvidersConfig;
export declare const ETHERSCAN_API_URL = "https://api.etherscan.io/v2/api";
export declare class Etherscan implements VerificationProvider {
    readonly chainId: string;
    readonly name: string;
    readonly url: string;
    readonly apiUrl: string;
    readonly apiKey: string;
    readonly dispatcherOrDispatcherOptions?: Dispatcher | DispatcherOptions;
    readonly pollingIntervalMs: number;
    constructor(etherscanConfig: {
        chainId: number;
        name?: string;
        url: string;
        apiUrl?: string;
        apiKey: string;
        dispatcher?: Dispatcher;
    });
    getContractUrl(address: string): string;
    isVerified(address: string): Promise<boolean>;
    verify(contractAddress: string, sourceCode: string, contractName: string, compilerVersion: string, constructorArguments: string): Promise<string>;
    pollVerificationStatus(guid: string, contractAddress: string, contractName: string): Promise<{
        success: boolean;
        message: string;
    }>;
}
//# sourceMappingURL=etherscan.d.ts.map